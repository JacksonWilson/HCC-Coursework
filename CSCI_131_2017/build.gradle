
apply plugin: 'java'
compileJava.options.fork = true
//compileJava.options.forkOptions.executable = 'C:/Program Files/Java/jdk1.8.0_131/bin/javac.exe'

apply plugin: 'eclipse'
apply plugin: 'application'

repositories {
    jcenter()
}

dependencies {
    compile 'com.google.guava:guava:23.0'
    testCompile 'junit:junit:4.12'
}

mainClassName = 'labs.lab1.Driver'

jar {
    manifest.attributes 'Main-Class': mainClassName
}

def name = 'CSCI131_JavaBasicsLab_Wilson'
def entry = 'labs.lab1.Driver'
def includes = [
    'labs/lab1/*',
    'utils/KeyboardReader.*'
]

task deleteExisting(type: Delete) {
    delete "$rootDir/build/libs/$name"
}

task specificJar(type: Jar) {
    baseName = name
    destinationDir = file("$rootDir/build/libs/$name")
    manifest.attributes 'Main-Class': entry

    from sourceSets.main.output
    (includes).each { i -> include "$i" }
}

task copyBinFiles(type: Copy) {
    from 'bin'
    (includes).each { i -> include "$i" }
    into "build/libs/$name/bin"
}

task copySrcFiles(type: Copy) {
    from 'src/main/java'
    (includes).each { i -> include "$i" }
    into "build/libs/$name/src"
}

task buildSpecific {
    dependsOn 'deleteExisting'
    dependsOn 'specificJar'
    dependsOn 'copyBinFiles'
    dependsOn 'copySrcFiles'

    tasks.findByName('specificJar').mustRunAfter 'deleteExisting'
    tasks.findByName('copyBinFiles').mustRunAfter 'specificJar'
    tasks.findByName('copySrcFiles').mustRunAfter 'copyBinFiles'
}
